version: 2

jobs:
  getDiffs:
    docker: 
      - image: circleci/node
    steps:
      - run:
        - type: shell
        command: |
          COMMIT_RANGE=$(echo $CIRCLE_COMPARE_URL | sed 's:^.*/compare/::g')
          echo "Commit range: " $COMMIT_RANGE
          git diff $COMMIT_RANGE --name-status
          if [[ $(git diff $COMMIT_RANGE --name-status | grep "movie") != "" ]]; then
            echo "Changes to movie service"
            sh ../scripts/handle_changes.sh --service movie
          fi
          if [[ $(git diff $COMMIT_RANGE --name-status | grep "movix") != "" ]]; then
            echo "Changes to movix front end service"
            sh ../scripts/handle_changes.sh --service movix
          fi

  build:
    docker:
      - image: circleci/node
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: Install dependencies
          command: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
  test:
    docker:
      - image: circleci/node
    steps:
      - checkout
      - run: 
          name: Run unit tests
          command: yarn test
      - run:
          name: Generate code coverage
          command: './node_modules/.bin/nyc report --reporter=text-lcov'
      - store_artifacts:
          path: test-results.xml
          prefix: tests
      - store_artifacts:
          path: coverage
          prefix: coverage

  push-image:
    machine: true
    steps:
      - checkout
      - run: echo "${GCP_KEY_FILE}" | base64 --decode >> /tmp/gcp_key.json
      - run: docker build --rm=false -t eu.gcr.io/${GCP_PROJECT}/${IMAGE_NAME}:$CIRCLE_SHA1 .
      - run: gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
      - run: gcloud --quiet config set project ${GCP_PROJECT}
      - run: gcloud docker -- push eu.gcr.io/${GCP_PROJECT}/${IMAGE_NAME}:$CIRCLE_SHA1

  deploy:
    docker:
      - image: circleci/node
    steps:
      - checkout
      # - run: 
      #     name: Install gcloud SDK
      #     command: |
      #       # Create environment variable for correct distribution
      #       export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)"
      #       # Add the Cloud SDK distribution URI as a package source
      #       echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
      #       # Import the Google Cloud Platform public key
      #       curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
      #       # Update the package list and install the Cloud SDK
      #       sudo apt-get update -y && sudo apt-get install -y google-cloud-sdk kubectl
      - run: 
            name: Initialize & Authenticate gcloud SDK
            command: |
              echo "${GCP_KEY_FILE}" | base64 --decode >> /tmp/gcp_key.json
              gcloud auth activate-service-account --key-file /tmp/gcp_key.json
              gcloud config set project ${GCP_ACCOUNT_ID}
              gcloud config set compute/zone europe-west4-a
              gcloud container clusters get-credentials circleci-k8s-demo
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
  deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
